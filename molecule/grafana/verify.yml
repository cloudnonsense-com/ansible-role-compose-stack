---
- name: Verify
  hosts: all
  gather_facts: False
  roles:
  tasks:
    # Grafana tests
    - name: Check Grafana HTTP response
      ansible.builtin.uri:
        url: "http://host.docker.internal:37011"
        status_code: [200, 302]  # Grafana may redirect to login
      register: grafana_response

    - name: Verify Grafana is responding
      ansible.builtin.assert:
        that:
          - grafana_response.status in [200, 302]
        fail_msg: "Grafana did not return expected status"
        success_msg: "Grafana is responding"

    # InfluxDB tests
    - name: Check InfluxDB HTTP response
      ansible.builtin.uri:
        url: "http://host.docker.internal:37012/health"
        status_code: [200]
      register: influxdb_response

    - name: Verify InfluxDB is responding
      ansible.builtin.assert:
        that:
          - influxdb_response.status == 200
        fail_msg: "InfluxDB did not return HTTP 200"
        success_msg: "InfluxDB is responding"

    # Prometheus tests
    - name: Check Prometheus HTTP response
      ansible.builtin.uri:
        url: "http://host.docker.internal:37013/-/healthy"
        status_code: [200]
      register: prometheus_response

    - name: Verify Prometheus is responding
      ansible.builtin.assert:
        that:
          - prometheus_response.status == 200
        fail_msg: "Prometheus did not return HTTP 200"
        success_msg: "Prometheus is responding"

    # Docker network tests
    - name: Check grafana-dev network exists
      ansible.builtin.command: docker network inspect grafana-dev
      register: grafana_network
      changed_when: false

    - name: Verify grafana-dev network exists
      ansible.builtin.assert:
        that:
          - grafana_network.rc == 0
        fail_msg: "grafana-dev network does not exist"
        success_msg: "grafana-dev network exists"

    # Docker compose stack tests
    - name: Check grafana-dev compose stack status
      ansible.builtin.command: docker compose -f /opt/apps/grafana-dev/compose.yml ps
      register: grafana_stack
      changed_when: false

    - name: Verify grafana-dev stack is running
      ansible.builtin.assert:
        that:
          - "'grafana' in grafana_stack.stdout"
          - "'influxdb' in grafana_stack.stdout"
          - "'telegraf' in grafana_stack.stdout"
          - "'prometheus' in grafana_stack.stdout"
        fail_msg: "grafana-dev stack is not running properly"
        success_msg: "grafana-dev stack is running"
...
