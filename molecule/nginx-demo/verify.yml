---

- name: Verify
  hosts: all
  gather_facts: False
  roles:

  tasks:
    # Nginx-demo tests
    - name: Check nginx HTTP response
      ansible.builtin.uri:
        url: "http://host.docker.internal:37080"
        return_content: true
      register: nginx_response

    - name: Debug nginx response
      ansible.builtin.debug:
        var: nginx_response.content

    - name: Verify nginx status code
      ansible.builtin.assert:
        that:
          - nginx_response.status == 200
        fail_msg: "Nginx did not return HTTP 200 OK"
        success_msg: "Nginx returned HTTP 200 OK"

    - name: Verify nginx content
      ansible.builtin.assert:
        that:
          # - '"ansible role" in nginx_response.content'
          - nginx_response.content is search('deployed by the.*compose-stack.*ansible role')
        fail_msg: "Nginx content verification failed! Expected string not found."
        success_msg: "Nginx is serving the expected content."

    # Docker network tests
    - name: Check nginx-demo network exists
      ansible.builtin.command: docker network inspect nginx-demo
      register: nginx_network
      changed_when: false

    - name: Verify nginx-demo network exists
      ansible.builtin.assert:
        that:
          - nginx_network.rc == 0
        fail_msg: "nginx-demo network does not exist"
        success_msg: "nginx-demo network exists"

    # Docker compose stack tests
    - name: Check nginx-demo compose stack status
      ansible.builtin.command: docker compose -f /opt/apps/nginx-demo/compose.yml ps
      register: nginx_stack
      changed_when: false

    - name: Verify nginx-demo stack is running
      ansible.builtin.assert:
        that:
          - "'nginx-demo' in nginx_stack.stdout"
        fail_msg: "nginx-demo stack is not running properly"
        success_msg: "nginx-demo stack is running"

...
