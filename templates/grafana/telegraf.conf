[global_tags]
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false
  debug = false

[[outputs.influxdb]]
  urls = ["http://$INFLUXDB_HOST:8086"]
  database = "$INFLUXDB_DATABASE"
  timeout = "60s"
  username = "$INFLUXDB_USER"
  password = "$INFLUXDB_PASSWORD"
  user_agent = "telegraf"
  skip_database_creation = false

[[inputs.net]]
[[inputs.netstat]]
[[inputs.diskio]]
[[inputs.kernel]]
[[inputs.linux_sysctl_fs]]
[[inputs.mem]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs",
            "devtmpfs",
            "devfs",
            "iso9660",
            "overlay",
            "aufs",
            "squashfs"
  ]

[[inputs.dns_query]]
  servers = ["192.168.1.1"]
  domains = [
    "google.com",
    "hp.com",
    "dell.com",
    "github.com",
    "app.terraform.io",
    "dropbox.com"
  ]
  record_type = "A"
  port = 53
  timeout = 10 # was 3s
  interval = "60s"

[[inputs.http_response]]
  urls = [
    "http://www.google.com",
    "https://hp.com",
    "https://dell.com",
    "https://github.com",
    "https://app.terraform.io",
    "https://dropbox.com"
  ]
  response_timeout = "30s" # was 5s
  method = "GET"
  follow_redirects = true
  interval = "60s" # was unset

[[inputs.internal]]
  collect_memstats = true

[[inputs.ping]]
  urls = [
    "1.1.1.1",
    "8.8.8.8",
    "194.168.4.100",
    "194.168.8.100"
  ]
  method = "exec"
  count = 1
  ping_interval = 1.0
  timeout = 10.0   # was 5.0
  deadline = 20    # was 10
  binary = "ping"
  ipv6 = false

# [[inputs.docker]]
#   endpoint = "unix:///var/run/docker.sock"

# [[inputs.exec]]
#   commands = ["cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq"]
#   name_override = "cpu_frequency"
#   data_format = "value"
#   data_type = "integer"

[[inputs.exec]]
  commands = ["/usr/bin/speedtest-cli --csv --bytes"]
  name_override = "speedtest"
  timeout = "3m"
  interval = "15m"
  data_format = "csv"
  csv_column_names = ['Server ID', 'Sponsor', 'Server Name', 'Timestamp', 'Distance', 'Ping', 'Download', 'Upload', 'Share', 'IP Address']
  csv_timestamp_column = "Timestamp"
  csv_timestamp_format = "2006-01-02T15:04:05Z07:00"

[[inputs.exec]]
  commands=["mtr -C google.com s3-website.ap-northeast-2.amazonaws.com s3-website.eu-central-1.amazonaws.com s3-website.af-south-1.amazonaws.com"]
  timeout = "5m"
  interval = "10m"
  data_format = "csv"
  csv_skip_rows = 1
  csv_column_names=[ "", "", "status","dest","hop","ip","loss","snt","", "","avg","best","worst","stdev"]
  name_override = "mtr"
  csv_tag_columns = ["dest", "hop", "ip"]
